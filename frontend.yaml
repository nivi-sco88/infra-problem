apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: docker.io/nivisco88/tw-app:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8000
        - containerPort: 8080
        env:
        - name: APP_PORT
          value: "8000"
        - name: STATIC_URL
          value: "http://0.0.0.0:8000"
        - name: QUOTE_SERVICE_URL
          value: $AKS_EXTERNAL_IP:8081
        - name: NEWSFEED_SERVICE_URL
          value: $AKS_EXTERNAL_IP:8082
        - name: NEWSFEED_SERVICE_TOKEN
          value: "T1&eWbYXNWG1w1^YGKDPxAWJ@^et^&kX"
        command:
          - "./front-end/public/serve.py"
          - "java"
          - "-jar"
          - "build/front-end.jar"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: external-ip-config
data:
  EXTERNAL_IP: $AKS_EXTERNAL_IP

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - name: port1
      protocol: TCP
      port: 8000
      targetPort: 8000
    - name: port2
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer